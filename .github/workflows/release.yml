name: Release

# I use npm to store app version.
# When a new version is created

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: macos-latest
    permissions: write-all
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install 

      - name: Check version change
        run: pnpx tsx .github/actions/version.ts
      
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-apple-darwin,x86_64-apple-darwin'

      - name: Run Release
        run: pnpx tsx .github/actions/release.ts
        env:
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

